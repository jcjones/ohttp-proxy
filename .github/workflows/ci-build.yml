name: ci-build

on:
  push:
    branches: [main, release/**]
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        rust-toolchain: [
            "stable",
          ]
    runs-on: ubuntu-latest
    permissions:
      id-token: "write"
      contents: "read"
    env:
      CARGO_INCREMENTAL: 0
      CARGO_TERM_COLOR: always
      RUSTFLAGS: "-D warnings"
    steps:
      - name: Get OS version
        id: os-version
        run: echo "release=$(lsb_release --release --short)" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v5
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust-toolchain }}
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ steps.os-version.outputs.release }}
      - name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@v3
      - name: Build
        run: cargo build
      - name: Test
        run: cargo test --all-targets

  lints:
    strategy:
      matrix:
        rust-toolchain: [
            "stable",
          ]
    runs-on: ubuntu-latest
    env:
      CARGO_INCREMENTAL: 0
      CARGO_TERM_COLOR: always
      RUSTDOCFLAGS: "-D warnings"
      RUSTFLAGS: "-D warnings"
    steps:
      - uses: actions/checkout@v5
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust-toolchain }}
          components: clippy, rustfmt
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ steps.os-version.outputs.release }}
      - name: Format
        run: cargo fmt --message-format human -- --check
      - name: Clippy
        run: cargo clippy --workspace --all-targets
      - name: Clippy (all features)
        run: cargo clippy --workspace --all-targets --all-features
      - name: cargo-deny
        uses: EmbarkStudios/cargo-deny-action@v2.0.13
        with:
          command: check bans licenses sources -A unmatched-organization

  rustsec_advisories:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v5
      - name: cargo-deny
        uses: EmbarkStudios/cargo-deny-action@v2.0.13
        with:
          command: check advisories
